name: Build & Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - master
env: 
  # Linux Config
  SERVER_SSH: ${{ secrets.DEPLOY_KEY }}
  SERVER_HOST: "4ih1.l.time4vps.cloud"
  SERVER_USERNAME: "root"
  SERVER_TARGET_DIR: "/etc/apache2/sites-available"
   

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: Deploy to Linux Server
        uses: easingthemes/ssh-deploy@v2.1.3
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ env.SERVER_HOST }}
          REMOTE_USER: ${{ env.SERVER_USERNAME }}
          SOURCE: /
          TARGET: ${{ env.SERVER_TARGET_DIR }}           
     
  refresh:
    runs-on: ubuntu-latest
    needs: deploy
    steps:	
      - name: Terminate Sites
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 10s
          script: |
            echo "Killing ${{ env.DOTNET_DLL_NAME }}..."
            if pgrep -f "dotnet ${{ env.DOTNET_DLL_NAME }}" > /dev/null; then 
                echo "Found a running dotnet ${{ env.DOTNET_DLL_NAME }} process."
                pid=$(pgrep -f "dotnet ${{ env.DOTNET_DLL_NAME }}")
                echo "Killing process with PID: $pid"
                trap '' TERM
                if kill $pid >/dev/null 2>&1; then
                    echo "Process killed successfully"
                else
                    echo "Failed to kill process"
                fi
                trap TERM
            else
                echo "No running dotnet ${{ env.DOTNET_DLL_NAME }} process found."
            fi
            echo "Done."  
            
      - name: Refresh Apache2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 10s
          script: |
            cd ${{ env.SERVER_TARGET_DIR }}
            nohup dotnet ${{ env.DOTNET_DLL_NAME }} &>/dev/null &
            echo "Launched ${{ env.DOTNET_DLL_NAME }}"
            echo "Restarting Apache2..."
            sudo systemctl restart apache2
            echo "Apache2 WebServer restarted"
